#SCREEN_WIDTH=$(xwininfo -root | awk '$1=="Width:" {print $2}')
#SCREEN_HEIGHT=$(xwininfo -root | awk '$1=="Height:" {print $2}')
#ZONE=$(samba-tool domain info 127.0.0.1 |grep Domain |cut -d ":" -f2 |cut -d " " -f2) # (install-ad sonrasi common-value dosyasina yazilacak)
#DOMAIN=$(echo $ZONE |tr [:lower:] [:upper:]) # (install-ad sonrasi common-value dosyasina yazilacak)
#HNAME=$(hostname -f) # (install-ad sonrasi common-value yazilacak)
#
#set -e
cd /usr/local/debiandc
source common-value

# checking that samba is installed and AD is installed
netstat -tulanp | grep 636 | grep -w tcp >> /dev/null && ADPORT1=OK
netstat -tulanp | grep 389 | grep -w tcp >> /dev/null && ADPORT2=OK
if ! [ -x "$(command -v samba-tool)" ] || [ ! "$ADPORT1" = "OK" ] || [ ! "$ADPORT2" = "OK" ]; then

CHOICE=$(zenity  --list --text "Server Manager | Server Settings and Domain Setup Menu" --title "Server Settings" --column "" --width $WIDTH --height $HEIGHT \
"Show IP Address" \
"Set Static IP" \
"Setup a New Domain" \
"Join as DC to existing domain (Additional Domain Controller)"
)

if [ "$?" = "0" ] && [ "$CHOICE" = "" ]
then
bash manager
exit 1
fi

if [ "$CHOICE" = "Show IP Address" ]
then
bash show_ip_address
elif [ "$CHOICE" = "Set Static IP" ]
then
bash set_static_ip
elif [ "$CHOICE" = "Setup a New Domain" ]
then
bash install_ad
elif [ "$CHOICE" = "Join as DC to existing domain (Additional Domain Controller)" ]
then
bash join_ad

else
exit 1
fi

else

sed -i '/^$/d' common-value
DOMAIN_NAME=$(samba-tool domain info 127.0.0.1 |grep Domain |cut -d ':' -f2 |cut -d ' ' -f2 |tr a-z A-Z)
HNAME=$(hostname -f)
sed -i '/DOMAIN/d' common-value
sed -i '/HNAME/d' common-value
echo "DOMAIN=$DOMAIN_NAME" >> common-value
echo "HNAME=$HNAME" >> common-value
source common-value

bash service_check

#TICKET=not_exist
#klist > /tmp/ticket_control.txt
#ack 'Valid starting' /tmp/ticket_control.txt > /dev/null && TICKET=exist
#
#if [ "$TICKET" = "not_exist" ]
#then
#ADMIN_PASS=$(zenity --entry --title="Administrator password" --text="Administrator password" --hide-text)
#echo $ADMIN_PASS | kinit administrator@$DOMAIN
#
#klist > /tmp/ticket_control.txt
#ack 'Valid starting' /tmp/ticket_control.txt > /dev/null && TICKET=exist
#fi
#
#if [ "$TICKET" = "not_exist" ]
#then
#zenity --error --text="Kerberos ticket could not be obtained \n \nPlease make sure you entered domain Administrator account password of $DOMAIN" --ellipsize
#bash service_check
##bash reset_administrator_pass
#exit 1
#fi

CHOICE=$(zenity  --list  --text "Active Directory Management" --title="Active Directory Management" --width $WIDTH --height $HEIGHT --column "" \
"User Management" \
"Group Management" \
"OU Management" \
"Computer Management" \
"DNS Management" \
"Domain Operations" \
"Active Directory Settings" \
"Maintenance" \
"Reports"
#"" \
#" > Host & Client Management" \
#"    :: Manage Windows Host"
)

if [ "$?" = "0" ] && [ "$CHOICE" = "" ]
then
bash manager
exit 1
fi

if [ "$CHOICE" = "User Management" ]; then
	bash user_man
elif [ "$CHOICE" = "Group Management" ]; then
	bash group_man
elif [ "$CHOICE" = "OU Management" ]; then
	bash ou_man
elif [ "$CHOICE" = "Computer Management" ]; then
	bash computer_man
elif [ "$CHOICE" = "DNS Management" ]; then
	bash dns_man
elif [ "$CHOICE" = "Domain Operations" ]; then
	bash operations_domain
elif [ "$CHOICE" = "Active Directory Settings" ]; then
	bash settings
elif [ "$CHOICE" = "Maintenance" ]; then
	bash maintenance
elif [ "$CHOICE" = "Reports" ]; then
	bash reports
else
exit 1
fi

fi
